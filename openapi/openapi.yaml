openapi: 3.0.1
info:
  title: Eton.TMS.OpBackOffice.API
  version: "1.0"
servers:
- url: /
paths:
  /api/Vehicle/GetAll:
    get:
      tags:
      - Vehicle
      parameters:
      - name: VehicleTypeId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
      - name: VehicleTypeCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Keyword
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: CreatedAt
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleResponsePaginatedResultResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponsePaginatedResultResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleResponsePaginatedResultResponse'
  /api/Vehicle/GetOne/{code}:
    get:
      tags:
      - Vehicle
      parameters:
      - name: code
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
  /api/Vehicle/Create:
    post:
      tags:
      - Vehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleCreationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/VehicleCreationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VehicleCreationRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
  /api/Vehicle/Update/{code}:
    patch:
      tags:
      - Vehicle
      parameters:
      - name: code
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleUpdatingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/VehicleUpdatingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VehicleUpdatingRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
  /api/Vehicle/Delete/{code}:
    delete:
      tags:
      - Vehicle
      parameters:
      - name: code
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleResponseBaseResponse'
  /api/VehicleType/GetAll:
    get:
      tags:
      - VehicleType
      parameters:
      - name: Keyword
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: CreatedAt
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleTypeResponsePaginatedResultResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeResponsePaginatedResultResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeResponsePaginatedResultResponse'
  /api/VehicleType/Create:
    post:
      tags:
      - VehicleType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleTypeCreationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/VehicleTypeCreationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VehicleTypeCreationRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleTypeResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeResponseBaseResponse'
  /api/VehicleType/GetOne/{vehicleTypeCode}:
    get:
      tags:
      - VehicleType
      parameters:
      - name: vehicleTypeCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleTypeDetailResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeDetailResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeDetailResponseBaseResponse'
  /api/VehicleType/Delete/{vehicalTypeCode}:
    delete:
      tags:
      - VehicleType
      parameters:
      - name: vehicalTypeCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectBaseResponse'
  /api/VehicleType/Update/{vehicleTypeCode}:
    patch:
      tags:
      - VehicleType
      parameters:
      - name: vehicleTypeCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleTypeUpdatingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/VehicleTypeUpdatingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VehicleTypeUpdatingRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleTypeResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeResponseBaseResponse'
  /api/Webhook/Optimize:
    post:
      tags:
      - Webhook
      requestBody:
        content:
          application/json:
            schema: {}
          text/json:
            schema: {}
          application/*+json:
            schema: {}
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
components:
  schemas:
    EmployeeAuditResponse:
      type: object
      properties:
        code:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        mobilePhone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        plateNumber:
          type: string
          nullable: true
      additionalProperties: false
    ObjectBaseResponse:
      type: object
      properties:
        success:
          type: boolean
        errorCode:
          type: string
          nullable: true
        errorMessage:
          type: string
          nullable: true
        data:
          nullable: true
      additionalProperties: false
    VehicleBaseResponse:
      type: object
      properties:
        createdAt:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: integer
          format: int64
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        numberPlate:
          type: string
          nullable: true
        vehicleTypeName:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        vehicleTypeId:
          type: string
          format: uuid
      additionalProperties: false
    VehicleCreationRequest:
      type: object
      properties:
        code:
          type: string
          nullable: true
        numberPlate:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        vehicleTypeId:
          type: string
          format: uuid
      additionalProperties: false
    VehicleResponse:
      type: object
      properties:
        createdAt:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: integer
          format: int64
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        numberPlate:
          type: string
          nullable: true
        vehicleTypeName:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        vehicleTypeId:
          type: string
          format: uuid
        createdByEmployee:
          $ref: '#/components/schemas/EmployeeAuditResponse'
        updatedByEmployee:
          $ref: '#/components/schemas/EmployeeAuditResponse'
        vehicleType:
          $ref: '#/components/schemas/VehicleTypeBaseResponse'
      additionalProperties: false
    VehicleResponseBaseResponse:
      type: object
      properties:
        success:
          type: boolean
        errorCode:
          type: string
          nullable: true
        errorMessage:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/VehicleResponse'
      additionalProperties: false
    VehicleResponsePaginatedResponse:
      type: object
      properties:
        items:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/VehicleResponse'
        countPerPage:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
      additionalProperties: false
    VehicleResponsePaginatedResultResponse:
      type: object
      properties:
        success:
          type: boolean
        errorCode:
          type: string
          nullable: true
        errorMessage:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/VehicleResponsePaginatedResponse'
      additionalProperties: false
    VehicleTypeBaseResponse:
      type: object
      properties:
        createdAt:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: integer
          format: int64
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        length:
          type: number
          format: float
          nullable: true
        height:
          type: number
          format: float
          nullable: true
        width:
          type: number
          format: float
          nullable: true
        maximumPayload:
          type: number
          format: float
          nullable: true
        maximumCapacity:
          type: number
          format: float
          nullable: true
        status:
          type: string
          nullable: true
      additionalProperties: false
    VehicleTypeCreationRequest:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        length:
          type: number
          format: float
          nullable: true
        height:
          type: number
          format: float
          nullable: true
        width:
          type: number
          format: float
          nullable: true
        maximumPayload:
          type: number
          format: float
          nullable: true
        maximumCapacity:
          type: number
          format: float
          nullable: true
        status:
          type: string
          nullable: true
      additionalProperties: false
    VehicleTypeDetailResponse:
      type: object
      properties:
        createdAt:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: integer
          format: int64
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        length:
          type: number
          format: float
          nullable: true
        height:
          type: number
          format: float
          nullable: true
        width:
          type: number
          format: float
          nullable: true
        maximumPayload:
          type: number
          format: float
          nullable: true
        maximumCapacity:
          type: number
          format: float
          nullable: true
        status:
          type: string
          nullable: true
        createdByEmployee:
          $ref: '#/components/schemas/EmployeeAuditResponse'
        updatedByEmployee:
          $ref: '#/components/schemas/EmployeeAuditResponse'
      additionalProperties: false
    VehicleTypeDetailResponseBaseResponse:
      type: object
      properties:
        success:
          type: boolean
        errorCode:
          type: string
          nullable: true
        errorMessage:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/VehicleTypeDetailResponse'
      additionalProperties: false
    VehicleTypeResponse:
      type: object
      properties:
        createdAt:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: integer
          format: int64
          nullable: true
        createdBy:
          type: string
          nullable: true
        updatedBy:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        length:
          type: number
          format: float
          nullable: true
        height:
          type: number
          format: float
          nullable: true
        width:
          type: number
          format: float
          nullable: true
        maximumPayload:
          type: number
          format: float
          nullable: true
        maximumCapacity:
          type: number
          format: float
          nullable: true
        status:
          type: string
          nullable: true
        createdByEmployee:
          $ref: '#/components/schemas/EmployeeAuditResponse'
        updatedByEmployee:
          $ref: '#/components/schemas/EmployeeAuditResponse'
        vehicles:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/VehicleBaseResponse'
      additionalProperties: false
    VehicleTypeResponseBaseResponse:
      type: object
      properties:
        success:
          type: boolean
        errorCode:
          type: string
          nullable: true
        errorMessage:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/VehicleTypeResponse'
      additionalProperties: false
    VehicleTypeResponsePaginatedResponse:
      type: object
      properties:
        items:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/VehicleTypeResponse'
        countPerPage:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
      additionalProperties: false
    VehicleTypeResponsePaginatedResultResponse:
      type: object
      properties:
        success:
          type: boolean
        errorCode:
          type: string
          nullable: true
        errorMessage:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/VehicleTypeResponsePaginatedResponse'
      additionalProperties: false
    VehicleTypeUpdatingRequest:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        length:
          type: number
          format: float
          nullable: true
        height:
          type: number
          format: float
          nullable: true
        width:
          type: number
          format: float
          nullable: true
        maximumPayload:
          type: number
          format: float
          nullable: true
        maximumCapacity:
          type: number
          format: float
          nullable: true
        status:
          type: string
          nullable: true
      additionalProperties: false
    VehicleUpdatingRequest:
      type: object
      properties:
        code:
          type: string
          nullable: true
        numberPlate:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        vehicleTypeId:
          type: string
          format: uuid
      additionalProperties: false
    WebhookResponse:
      type: object
      properties:
        message:
          type: string
          nullable: true
      additionalProperties: false
