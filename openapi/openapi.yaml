openapi: 3.0.1
info:
  title: Eton.TMS.OpBackOffice.API
  version: "1.0"
servers:
- url: /
paths:
  /api/Admin/station/GetAll:
    get:
      tags:
      - Admin
       summary: Updates a pet in the store with form data
       parameters:
      - name: ExcludeStationCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Keyword
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: CreatedAt
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StationResponsePaginatedResultResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StationResponsePaginatedResultResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StationResponsePaginatedResultResponse'
        
  /api/Admin/station/GetOne/{stationCode}:
    get:
      tags:
      - Admin
       summary: Updates a pet in the store with form data
      parameters:
      - name: stationCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StationDetailResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StationDetailResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StationDetailResponseBaseResponse'
  /api/Admin/station/Create:
    post:
      tags:
      - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationCreationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/StationCreationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StationCreationRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StationResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StationResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StationResponseBaseResponse'
  /api/Admin/station/Update/{stationCode}:
    patch:
      tags:
      - Admin
       summary: Updates a pet in the store with form data
      parameters:
      - name: stationCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationUpdatingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/StationUpdatingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StationUpdatingRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StationResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StationResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StationResponseBaseResponse'
  /api/Admin/employee/SyncEmployeeToCOD:
    post:
      tags:
      - Admin
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ObjectBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ObjectBaseResponse'
  /api/Cod/GetAllTasks:
    get:
      tags:
      - Cod
       summary: Updates a pet in the store with form data
      parameters:
      - name: DriverCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: CompletedAt
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StationCodes
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ServiceType
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Keyword
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: CreatedAt
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CodTaskDetailResponsePaginatedResultResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CodTaskDetailResponsePaginatedResultResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CodTaskDetailResponsePaginatedResultResponse'
  /api/Cod/GetOneTask/{taskId}:
    get:
      tags:
      - Cod
       summary: Updates a pet in the store with form data
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CodTaskDetailResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CodTaskDetailResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CodTaskDetailResponseBaseResponse'
  /api/Cod/GetAllValidators:
    get:
      tags:
      - Cod
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CodValidatorResponsePaginatedResultResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CodValidatorResponsePaginatedResultResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CodValidatorResponsePaginatedResultResponse'
  /api/Cod/GetAllTransactions:
    get:
      tags:
      - Cod
       summary: Updates a pet in the store with form data
      parameters:
      - name: Method
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: DriverCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ConfirmedBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ConfirmedAt
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ServiceType
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StationCodes
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Keyword
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: CreatedAt
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponsePaginatedResultResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponsePaginatedResultResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponsePaginatedResultResponse'
  /api/Cod/GetOneTransaction/{transactionId}:
    get:
      tags:
      - Cod
       summary: Updates a pet in the store with form data
      parameters:
      - name: transactionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
  /api/Cod/CreateTransaction:
    post:
      tags:
      - Cod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodTransactionCreationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CodTransactionCreationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CodTransactionCreationRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
  /api/Cod/ConfirmTransaction:
    post:
      tags:
      - Cod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodTransactionConfirmationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CodTransactionConfirmationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CodTransactionConfirmationRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
  /api/Cod/RejectTransaction:
    post:
      tags:
      - Cod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodTransactionRejectionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CodTransactionRejectionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CodTransactionRejectionRequest'
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CodTransactionDetailResponseBaseResponse'
  /api/Cod/GetAllValidatorSchemes:
    get:
      tags:
      - Cod
       summary: Updates a pet in the store with form data
      parameters:
      - name: EffectiveFrom
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Keyword
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: CreatedAt
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: PageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CodValidatorSchemeDetailResponsePaginatedResultResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CodValidatorSchemeDetailResponsePaginatedResultResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CodValidatorSchemeDetailResponsePaginatedResultResponse'
